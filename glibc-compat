#!/bin/bash

CHR_PATH="/var/glibc-chroot"

invoke_cmd () {
    if [ $(id -u) -eq 0 ]; then
	echo "to invoke as root use --root"
	exit 1
    fi
    bwrap --bind "$CHR_PATH" / \
	  --dev-bind /dev /dev \
	  --proc /proc \
	  --bind /sys /sys \
	  --bind /run /run \
	  --bind /home /home \
	  --ro-bind /etc/resolv.conf /etc/resolv.conf \
	  --ro-bind /etc/passwd /etc/passwd \
	  --ro-bind /etc/group /etc/group \
	  "$@"
}

invoke_cmd_as_root () {
    if [ ! $(id -u) -eq 0 ]; then
	echo "--root requires root privileges"
	exit 1
    fi
    mountpoint -q "$CHR_PATH"/dev || mount --bind /dev "$CHR_PATH"/dev
    mountpoint -q "$CHR_PATH"/proc|| mount --bind /proc "$CHR_PATH"/proc
    chroot "$CHR_PATH" "$@"
}

create_chroot () {
    if [ ! $(id -u) -eq 0 ]; then
	echo "--create requires root privileges"
	exit 1
    fi
    echo "initalizing chroot in $CHR_PATH"
    mkdir -p "$CHR_PATH"
    debootstrap --arch amd64 stable "$CHR_PATH" "https://deb.debian.org/debian"
}

invoke_wrapper () {
    if [ ! -d "$CHR_PATH" ]; then
	echo "Chroot doesn't exist. Create it with 'glibc-compat --create'"
    else
	if [ "$#" -gt 1 ]; then
	    "$@"
	else
	    echo "No command specified, entering chroot."
	    "$@" /bin/bash
	fi
    fi
}

umount_chroot () {
    if [ ! $(id -u) -eq 0 ]; then
	echo "--umount requires root privileges"
	exit 1
    fi
    mountpoint -q "$CHR_PATH"/dev || umount "$CHR_PATH"/dev
    mountpoint -q "$CHR_PATH"/proc || umount "$CHR_PATH"/proc
}

destroy_chroot () {
    if [ ! $(id -u) -eq 0 ]; then
	echo "--destroy requires root privileges"
	exit 1
    fi
    umount_chroot
    rm -rf --one-file-system "$CHR_PATH"
    if [ -d "$CHR_PATH" ]; then
	echo "failed to remove chroot - are there mounts left?"
    fi
}

help_print () {
    echo \
	"usage: glibc-compat (--option) (extra arguments):
	  --create    - create the chroot
	  --root      - run command as root
	  --umount    - unmount chroot
	  --destroy   - destroy chroot
	  --help      - print help"
}

case "$1" in
    --root) shift && invoke_wrapper invoke_cmd_as_root "$@" ;;
    --create) create_chroot ;;
    --umount) umount_chroot ;;
    --destroy) destroy_chroot ;;
    --help) help_print ;;
    *) invoke_wrapper invoke_cmd "$@" ;;
esac
